{"version":3,"sources":["../../src/middleware/auth.js"],"names":["JWT_SECRET","process","env","AUTH_JWT_SECRET","req","res","next","token","header","status","json","msg","decoded","jwt","verify","user","e"],"mappings":";;;;;;;;;AAAA;;AAEA,IAAMA,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,eAA/B;;eAEe,kBAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACjC,MAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAW,cAAX,CAAd,CADiC,CAGjC;;AACA,MAAI,CAACD,KAAL,EACE,OAAOF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAArB,CAAP;;AAEF,MAAI;AACF;AACA,QAAMC,OAAO,GAAGC,yBAAIC,MAAJ,CAAWP,KAAX,EAAkBP,UAAlB,CAAhB,CAFE,CAGF;;;AACAI,IAAAA,GAAG,CAACW,IAAJ,GAAWH,OAAX;AACAN,IAAAA,IAAI;AACL,GAND,CAME,OAAOU,CAAP,EAAU;AACVX,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAArB;AACD;AACF,C","sourcesContent":["import jwt from 'jsonwebtoken';\n\nconst JWT_SECRET = process.env.AUTH_JWT_SECRET\n\nexport default (req, res, next) => {\n  const token = req.header('x-auth-token');\n\n  // Check for token\n  if (!token)\n    return res.status(401).json({ msg: 'No token, authorization denied' });\n\n  try {\n    // Verify token\n    const decoded = jwt.verify(token, JWT_SECRET);\n    // Add user from payload\n    req.user = decoded;\n    next();\n  } catch (e) {\n    res.status(400).json({ msg: 'Token is not valid' });\n  }\n};\n"],"file":"auth.js"}